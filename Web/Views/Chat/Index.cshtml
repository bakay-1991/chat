@model Web.ViewModels.ChatViewModel
@{
    ViewData["Title"] = "Chat Page";
}

<div class="container">
    <h3 class=" text-center">Messaging</h3>
    <div class="messaging">
        <div class="inbox_msg">

            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>Recent</h4>
                    </div>
                    <div class="srch_bar">
                        <div class="stylish-input-group">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-search">
                                <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="inbox_chat">
                    @for (int i = 0; i < Model.Receivers.Count; i++)
                    {
                        var receiver = Model.Receivers[i];
                        <div id="@receiver.Id" class="chat_list @(i == 0 ? "active_chat" : "")">
                            <div class="chat_people">
                                <div class="chat_img"> <img src="@receiver.IconUrl"> </div>
                                <div class="chat_ib">
                                    <h5>
                                        @receiver.Name
                                    </h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="mesgs">
                <div class="msg_history">
                    @foreach (var message in Model.Messages)
                    {
                        @if (string.IsNullOrEmpty(@message.Sender))
                        {
                            <div class="outgoing_msg">
                                <div class="sent_msg">
                                    <p>
                                        @message.Text
                                    </p>
                                    <span class="time_date">@message.Created</span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="incoming_msg">
                                <div class="incoming_msg_img">@message.Sender</div>
                                <div class="received_msg">
                                    <div class="received_withd_msg">
                                        <p>
                                            @message.Text
                                        </p>
                                        <span class="time_date">@message.Created</span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="type_msg">
                    <div class="input_msg_write">
                        <input type="text" id="message" class="write_msg" placeholder="Type a message" />
                        <button type="button" id="sendBtn" class="msg_send_btn"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


@section Scripts {
    <script src="~/js/lazyLoading.js"></script>
    <script src="~/js/signalr.min.js"></script>

    <script>
        $('.msg_history').animate({ scrollTop: $('.msg_history').height() }, 100);

        $('.msg_history').scroll(messageScrollHandler);

        $('.inbox_chat').scroll(receiverScrollHandler);

        $(document).on('click', '.chat_list', function () {
            if (!$(this).hasClass('active_chat')) {
                $('.active_chat').removeClass('active_chat');
                $(this).addClass('active_chat');
                $('.msg_history').empty();
                let receiverId = $('.active_chat').attr('id');
                loadMessages(receiverId, 0, () => { $('.msg_history').animate({ scrollTop: $('.msg_history')[0].scrollHeight }, 100); });
            }
        });
    </script>

    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl('/chat')
            .build();

        hubConnection.on("Receive", function (message) {
            let receiverId = $('.active_chat').attr('id');
            if (receiverId === message.receiverId) {
                $('.msg_history').append(getMessageHtml(message));
                if (!message.sender) {
                    $('.msg_history').animate({ scrollTop: $('.msg_history')[0].scrollHeight }, 100);
                }
            }
        });

        document.getElementById("sendBtn").addEventListener("click", function (e) {
            let receiverId = $('.active_chat').attr('id');
            let message = $("#message").val();
            hubConnection.invoke("Notify", receiverId, message);
            $('#message').val('').focus();
        });

        hubConnection.start();
    </script>
}